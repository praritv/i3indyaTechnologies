
Mixed.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000013c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000013c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000016c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000071b  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005b4  00000000  00000000  000008e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c6  00000000  00000000  00000e97  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001160  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000336  00000000  00000000  00001184  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  000014ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001622  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 72 00 	jmp	0xe4	; 0xe4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRA = (1<<7);
  6c:	80 e8       	ldi	r24, 0x80	; 128
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
  70:	8f ef       	ldi	r24, 0xFF	; 255
  72:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xFF;
  74:	81 bb       	out	0x11, r24	; 17
	while (1)
	{
		PORTB = 0xF0;
  76:	90 ef       	ldi	r25, 0xF0	; 240
		_delay_ms(1000);
		PORTB = 0x0F;
  78:	8f e0       	ldi	r24, 0x0F	; 15
		_delay_ms(1000);
		PORTA = (1<<7);
  7a:	20 e8       	ldi	r18, 0x80	; 128
	DDRA = (1<<7);
	DDRB = 0xFF;
	DDRD = 0xFF;
	while (1)
	{
		PORTB = 0xF0;
  7c:	98 bb       	out	0x18, r25	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	3f ef       	ldi	r19, 0xFF	; 255
  80:	43 ed       	ldi	r20, 0xD3	; 211
  82:	50 e3       	ldi	r21, 0x30	; 48
  84:	31 50       	subi	r19, 0x01	; 1
  86:	40 40       	sbci	r20, 0x00	; 0
  88:	50 40       	sbci	r21, 0x00	; 0
  8a:	e1 f7       	brne	.-8      	; 0x84 <main+0x18>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x22>
  8e:	00 00       	nop
		_delay_ms(1000);
		PORTB = 0x0F;
  90:	88 bb       	out	0x18, r24	; 24
  92:	3f ef       	ldi	r19, 0xFF	; 255
  94:	43 ed       	ldi	r20, 0xD3	; 211
  96:	50 e3       	ldi	r21, 0x30	; 48
  98:	31 50       	subi	r19, 0x01	; 1
  9a:	40 40       	sbci	r20, 0x00	; 0
  9c:	50 40       	sbci	r21, 0x00	; 0
  9e:	e1 f7       	brne	.-8      	; 0x98 <main+0x2c>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x36>
  a2:	00 00       	nop
		_delay_ms(1000);
		PORTA = (1<<7);
  a4:	2b bb       	out	0x1b, r18	; 27
  a6:	3f ef       	ldi	r19, 0xFF	; 255
  a8:	49 e6       	ldi	r20, 0x69	; 105
  aa:	58 e1       	ldi	r21, 0x18	; 24
  ac:	31 50       	subi	r19, 0x01	; 1
  ae:	40 40       	sbci	r20, 0x00	; 0
  b0:	50 40       	sbci	r21, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x40>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x4a>
  b6:	00 00       	nop
		_delay_ms(500);
		PORTA = (0<<7);
  b8:	1b ba       	out	0x1b, r1	; 27
  ba:	3f ef       	ldi	r19, 0xFF	; 255
  bc:	43 ec       	ldi	r20, 0xC3	; 195
  be:	59 e0       	ldi	r21, 0x09	; 9
  c0:	31 50       	subi	r19, 0x01	; 1
  c2:	40 40       	sbci	r20, 0x00	; 0
  c4:	50 40       	sbci	r21, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x54>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x5e>
  ca:	00 00       	nop
		_delay_ms(200);
		PORTD = 0xF0;
  cc:	92 bb       	out	0x12, r25	; 18
  ce:	3f ef       	ldi	r19, 0xFF	; 255
  d0:	43 ed       	ldi	r20, 0xD3	; 211
  d2:	50 e3       	ldi	r21, 0x30	; 48
  d4:	31 50       	subi	r19, 0x01	; 1
  d6:	40 40       	sbci	r20, 0x00	; 0
  d8:	50 40       	sbci	r21, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x68>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x72>
  de:	00 00       	nop
		_delay_ms(1000);
		PORTD = 0x0F;
  e0:	82 bb       	out	0x12, r24	; 18
  e2:	cc cf       	rjmp	.-104    	; 0x7c <main+0x10>

000000e4 <_exit>:
  e4:	f8 94       	cli

000000e6 <__stop_program>:
  e6:	ff cf       	rjmp	.-2      	; 0xe6 <__stop_program>
